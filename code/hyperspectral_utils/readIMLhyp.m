function [im, wvls, scan, gain] = readIMLhyp( address, name)
% This file is part of the code for the paper Understanding the design of warning signals: a predator’s view
% by O.Pennacchio et al., 2021
% author: O.Pennacchio
% [what:] read hyperspectral file
% [input:] 
% address of folder with *iml file(s) and name of the files to read
% [output:] 
% im: the output hyperspectral image
% wvls: wavelengths of measurement
% scan: structure with information about scan
% gain: gain for current scan
% N.B.: for an example of how to use this file, please look at example_readIMLhyp.m 

% ===== how many scans (usually, a single one) =====
nbName = size(name);

% ===== loop over all scans =====
for idx = 1:nbName
    % ===== build name of hypercube/associated property file =====
    temp_name = [address name];
    temp_name_hdr = [temp_name '.hdr'];
    
    % ===== read property file =====
    fid = fopen(temp_name_hdr);
    count  = 0;
    tline = fgetl(fid);
    while ischar(tline) & count < 17
        count = count +1;
        disp(tline)
        tline = fgetl(fid);
        C{count} =  textscan(tline, '%q %f','Delimiter','=')
    end
    fclose(fid);
    
    % ===== read info =====
    scan.lines = C{3}{2};       % size of the scanning line in pixels
    scan.samples = C{4}{2};  % samples stands for the number of lines scanned
    scan.bands = C{5}{2};     % spectral dimension
    
    % ===== check spectral resolution (from property file) =====
    wvls_temp = [348.3931, 349.5263, 350.6595, 351.7927, 352.9259, 354.0591, 355.1923, 356.3255, 357.4587, 358.5919, 359.7251, 360.8583, 361.9915, 363.1247, 364.2579, 365.3911, 366.5243, 367.6575, 368.7907, 369.9239, 371.0571, 372.1903, 373.3235, 374.4567, 375.5899, 376.7231, 377.8563, 378.9895, 380.1227, 381.2559, 382.3891, 383.5223, 384.6555, 385.7887, 386.9219, 388.0551, 389.1883, 390.3215, 391.4547, 392.5879, 393.7211, 394.8543, 395.9875, 397.1207, 398.2539, 399.3871, 400.5203, 401.6535, 402.7867, 403.9199, 405.0531, 406.1863, 407.3195, 408.4527, 409.5859, 410.7191, 411.8523, 412.9855, 414.1187, 415.2519, 416.3851, 417.5183, 418.6515, 419.7847, 420.9179, 422.0511, 423.1843, 424.3175, 425.4507, 426.5839, 427.7171, 428.8503, 429.9835, 431.1167, 432.2499, 433.3831, 434.5163, 435.6495, 436.7827, 437.9159, 439.0491, 440.1823, 441.3155, 442.4487, 443.5819, 444.7151, 445.8483, 446.9815, 448.1147, 449.2479, 450.3811, 451.5143, 452.6475, 453.7807, 454.9139, 456.0471, 457.1803, 458.3135, 459.4467, 460.5799, 461.7131, 462.8463, 463.9795, 465.1127, 466.2459, 467.3791, 468.5123, 469.6455, 470.7787, 471.9119, 473.0451, 474.1783, 475.3115, 476.4447, 477.5779, 478.7111, 479.8443, 480.9775, 482.1107, 483.2439, 484.3771, 485.5103, 486.6435, 487.7767, 488.9099, 490.0431, 491.1763, 492.3095, 493.4427, 494.5759, 495.7091, 496.8423, 497.9755, 499.1087, 500.2419, 501.3751, 502.5083, 503.6415, 504.7747, 505.9079, 507.0411, 508.1743, 509.3075, 510.4407, 511.5739, 512.7071, 513.8403, 514.9735, 516.1067, 517.2399, 518.3731, 519.5063, 520.6395, 521.7727, 522.9059, 524.0391, 525.1723, 526.3055, 527.4387, 528.5719, 529.7051, 530.8383, 531.9715, 533.1047, 534.2379, 535.3711, 536.5043, 537.6375, 538.7707, 539.9039, 541.0371, 542.1703, 543.3035, 544.4367, 545.5699, 546.7031, 547.8363, 548.9695, 550.1027, 551.2359, 552.3691, 553.5023, 554.6355, 555.7687, 556.9019, 558.0351, 559.1683, 560.3015, 561.4347, 562.5679, 563.7011, 564.8343, 565.9675, 567.1007, 568.2339, 569.3671, 570.5003, 571.6335, 572.7667, 573.8999, 575.0331, 576.1663, 577.2995, 578.4327, 579.5659, 580.6991, 581.8323, 582.9655, 584.0987, 585.2319, 586.3651, 587.4983, 588.6315, 589.7647, 590.8979, 592.0311, 593.1643, 594.2975, 595.4307, 596.5639, 597.6971, 598.8303, 599.9635, 601.0967, 602.2299, 603.3631, 604.4963, 605.6295, 606.7627, 607.8959, 609.0291, 610.1623, 611.2955, 612.4287, 613.5619, 614.6951, 615.8283, 616.9615, 618.0947, 619.2279, 620.3611, 621.4943, 622.6275, 623.7607, 624.8939, 626.0271, 627.1603, 628.2935, 629.4267, 630.5599, 631.6931, 632.8263, 633.9595, 635.0927, 636.2259, 637.3591, 638.4923, 639.6255, 640.7587, 641.8919, 643.0251, 644.1583, 645.2915, 646.4247, 647.5579, 648.6911, 649.8243, 650.9575, 652.0907, 653.2239, 654.3571, 655.4903, 656.6235, 657.7567, 658.8899, 660.0231, 661.1563, 662.2895, 663.4227, 664.5559, 665.6891, 666.8223, 667.9555, 669.0887, 670.2219, 671.3551, 672.4883, 673.6215, 674.7547, 675.8879, 677.0211, 678.1543, 679.2875, 680.4207, 681.5539, 682.6871, 683.8203, 684.9535, 686.0867, 687.2199, 688.3531, 689.4863, 690.6195, 691.7527, 692.8859, 694.0191, 695.1523, 696.2855, 697.4187, 698.5519, 699.6851, 700.8183, 701.9515, 703.0847, 704.2179, 705.3511, 706.4843, 707.6175, 708.7507, 709.8839, 711.0171, 712.1503, 713.2835, 714.4167, 715.5499, 716.6831, 717.8163, 718.9495, 720.0827, 721.2159, 722.3491, 723.4823, 724.6155, 725.7487, 726.8819, 728.0151, 729.1483, 730.2815, 731.4147, 732.5479, 733.6811, 734.8143, 735.9475, 737.0807, 738.2139, 739.3471, 740.4803, 741.6135, 742.7467, 743.8799, 745.0131, 746.1463, 747.2795, 748.4127, 749.5459, 750.6791, 751.8123, 752.9455, 754.0787, 755.2119, 756.3451, 757.4783, 758.6115, 759.7447, 760.8779, 762.0111, 763.1443, 764.2775, 765.4107, 766.5439, 767.6771, 768.8103, 769.9435, 771.0767, 772.2099, 773.3431, 774.4763, 775.6095, 776.7427, 777.8759, 779.0091, 780.1423, 781.2755, 782.4087, 783.5419, 784.6751, 785.8083, 786.9415, 788.0747, 789.2079, 790.3411, 791.4743, 792.6075, 793.7407, 794.8739, 796.0071, 797.1403, 798.2735, 799.4067, 800.5399, 801.6731, 802.8063, 803.9395, 805.0727, 806.2059, 807.3391, 808.4723, 809.6055];
    if idx == 1
        wvls = wvls_temp;
    end
    if ~isequal(wvls_temp, wvls)
        error('Reference wavelengths resolution should be the same for all scans.')
    end
    
    % ===== read hypercube =====
    im = multibandread(temp_name, [scan.lines  scan.samples scan.bands],'uint16', 0, 'bil', 'ieee-le');
end

% ===== keep track of the gain during scanning for subsequent correction ==
gain = C{10}{2};

end